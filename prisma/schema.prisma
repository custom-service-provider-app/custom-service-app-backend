generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  role      Role
  listings  Listing[] // A user can have multiple listings
  createdAt DateTime  @default(now())
}

model Listing {
  id            String   @id @default(uuid())
  title         String
  description   String
  price         Float
  location      String
  status        Status   @default(PENDING) // Approval system
  ownerId       String
  owner         User     @relation(fields: [ownerId], references: [id])
  categoryId    String
  category      Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  subCategoryId String?
  subcategory   SubCategory? @relation(fields: [subCategoryId], references: [id], onDelete: Cascade)
  createdAt     DateTime @default(now())
}

model Category {
  id            String         @id @default(uuid())
  name          String         @unique
  subcategories SubCategory[]  // One-to-many relation
  listings      Listing[]      // A category can have multiple listings
  createdAt     DateTime       @default(now())
}

model SubCategory {
  id         String   @id @default(uuid())
  name       String
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId String
  listings   Listing[] // A subcategory can have multiple listings
  createdAt  DateTime @default(now())

  @@unique([name, categoryId])  // Ensure subcategory names are unique within a category
}

enum Role {
  ADMIN
  CUSTOMER
  SELLER
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}
